[{"/home/cristian/Desktop/prog/proyectos/ensolvers/front_with_react/front_end_with_react/src/index.js":"1","/home/cristian/Desktop/prog/proyectos/ensolvers/front_with_react/front_end_with_react/src/App.js":"2","/home/cristian/Desktop/prog/proyectos/ensolvers/front_with_react/front_end_with_react/src/reportWebVitals.js":"3","/home/cristian/Desktop/prog/proyectos/ensolvers/front_react_for_spring/src/index.js":"4","/home/cristian/Desktop/prog/proyectos/ensolvers/front_react_for_spring/src/reportWebVitals.js":"5","/home/cristian/Desktop/prog/proyectos/ensolvers/front_react_for_spring/src/App.js":"6"},{"size":501,"mtime":1634595713861,"results":"7","hashOfConfig":"8"},{"size":13119,"mtime":1634604700825,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1634510707432,"results":"10","hashOfConfig":"8"},{"size":501,"mtime":1634595713861,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1634510707432,"results":"13","hashOfConfig":"12"},{"size":11651,"mtime":1636149275272,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1m6kgpb",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"cbci11",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cristian/Desktop/prog/proyectos/ensolvers/front_with_react/front_end_with_react/src/index.js",[],["30","31"],"/home/cristian/Desktop/prog/proyectos/ensolvers/front_with_react/front_end_with_react/src/App.js",["32","33","34","35","36","37","38","39","40","41"],"import React from 'react';\nimport './App.css';\n\n\nglobal.activeFolderVar = {\n  id: null,\n  name: \"\",\n};\n\nclass App extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      folderList: [],\n      taskList: [],\n      activeFolder:{\n        id:null,\n        name:\"\",\n      },\n      activeItem:{\n        id:null,\n        title:\"\",\n        completed: false,\n        folder: null,\n      },\n      editing:false,\n      viewingItems:false,\n    }\n    this.fetchFolders = this.fetchFolders.bind(this);\n    this.fetchTasks = this.fetchTasks.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getCookie = this.getCookie.bind(this);\n    this.viewItems = this.viewItems.bind(this);\n    this.removeFolder = this.removeFolder.bind(this);\n    this.markUnmark = this.markUnmark.bind(this);\n    this.removeTask = this.removeTask.bind(this);\n    this.handleTaskSubmit = this.handleTaskSubmit.bind(this);\n    this.handleTaskChange = this.handleTaskChange.bind(this);\n  };\n\n  // For Django  postmethod interaction\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string restart with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  };\n\n  componentWillMount(){\n    if (this.state.viewingItems === false){\n      this.fetchFolders()\n    } else {\n      this.fetchTasks()\n    }    \n  };  \n\n  fetchFolders(){\n    console.log(\"Fetching folders\");\n    fetch('https://cristianestevez.pythonanywhere.com/api/folder-list/')\n    .then(response => response.json())\n    .then(data =>\n      this.setState({\n        folderList: data,\n      })\n      )    \n  };\n\n  // handles folder name typing\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    console.log(\"Name:\" , name, \"Value: \", value)\n    this.setState({\n      activeFolder:{\n        ...this.state.activeFolder,\n        name : value,\n      }\n    })\n  }\n\n  handleTaskChange(e){\n    var value = e.target.value\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title : value\n      }\n    })\n  }\n\n  // Handles folder submit\n  handleSubmit(e){\n    e.preventDefault();\n\n    var csrftoken = this.getCookie('csrftoken');\n    var url = 'https://cristianestevez.pythonanywhere.com/api/folder-create/';\n\n    fetch(url,{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeFolder)\n    }).then((response) => {\n      this.fetchFolders()\n      this.setState({\n        activeFolder: {\n          id: null,\n          name: '',\n        }\n      })\n    }).catch(function(error){\n      console.log(\"ERROR:\", error)\n    })\n  }\n\n  handleTaskSubmit(e){\n    e.preventDefault();\n    var csrftoken = this.getCookie('csrftoken');\n    var url = `https://cristianestevez.pythonanywhere.com/api/folder/${this.state.activeItem.folder}/task-update/${this.state.activeItem.id}/`;\n    if (this.state.editing === false){\n      var url = `https://cristianestevez.pythonanywhere.com/api/folder/${this.state.activeFolder.id}/task-create/`\n    }\n    \n    fetch(url,{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          folder: null,\n        }\n      })\n    }).catch(function(error){\n      console.log(\"ERROR:\", error)\n    })\n  }\n\n  removeFolder(folder){\n    var csrftoken = this.getCookie('csrftoken');\n\n    var url = `https://cristianestevez.pythonanywhere.com/api/folder-delete/${this.state.activeFolder.id}`\n\n    fetch(url,{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeFolder)\n    }).then((response) => {\n      this.fetchFolders()\n      this.setState({\n        activeFolder: {\n          id: null,\n          name: '',\n        }\n      })\n    }).catch(function(error){\n      console.log(\"ERROR:\", error)\n    })\n\n  }\n\n  viewItems(e){\n    var f_id = e.id;\n    var f_name = e.name;        \n    global.activeFolderVar = {\n      id: f_id,\n      name: f_name,\n    }\n    this.setState({\n        activeFolder: {          \n          ...this.state.activeFolder,\n          id: f_id,\n          name : f_name\n        },\n        viewingItems: true,\n    },)\n    this.fetchTasks(f_id);\n    \n  }\n\n  fetchTasks(f_id){\n    this.setState({\n      editing: false,\n    })\n    console.log(\"Fetching tasks\");\n    fetch(`https://cristianestevez.pythonanywhere.com/api/folder/${global.activeFolderVar.id}/task-list/`)\n    .then(response => response.json())\n    .then(data =>\n      this.setState({\n        taskList: data,\n      })\n      )    \n  };\n\n  removeFolder(folder){\n    console.log(\"Removing Folder\")\n    var csrftoken = this.getCookie('csrftoken');\n    var url = `https://cristianestevez.pythonanywhere.com/api/folder-delete/${folder.id}/`\n\n    fetch(url,{\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeFolder)\n    }).then((response) => {\n      this.fetchFolders()\n      this.setState({\n        activeFolder: {\n          id: null,\n          name: '',\n        }\n      })\n    })\n  };\n\n  markUnmark(task){\n    console.log(\"Mark Unmark clicked\")\n    task.completed = !task.completed\n    var csrftoken = this.getCookie('csrftoken')\n    var url = `https://cristianestevez.pythonanywhere.com/api/folder/${this.state.activeFolder.id}/task-update/${task.id}/`\n    fetch(url, {\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken':csrftoken,\n      },\n      body:JSON.stringify({'completed': task.completed, 'title':task.title})\n    }).then(() => {\n      this.fetchTasks()\n    })\n  };\n\n  restart(){\n    this.setState({\n      viewingItems: false,\n      editing:false,\n    })\n  };\n\n  removeTask(task){\n    console.log(\"Removing Task\")\n    var csrftoken = this.getCookie('csrftoken');\n    var url = `https://cristianestevez.pythonanywhere.com/api/folder/${global.activeFolderVar.id}/task-delete/${task.id}/`\n\n    fetch(url,{\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id: null,\n          title: '',\n          folder: this.state.activeItem.folder,\n        }\n      })\n    })\n  };\n\n  // sets active item for editing \n  startEdit(task){\n    console.log(task)\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  };\n\n  render(){\n    var folders = this.state.folderList\n    var self = this\n\n    \n    if (this.state.viewingItems === false){\n      var appTitle = 'Folders'\n      return(\n          <div id=\"container\" className=\"container\">\n              <br></br>\n              <p id=\"app-title\" styles=\"font-weight: bold;\">{appTitle}</p>\n\n              <div id=\"todo-list\">\n\n                {folders.map(function(folder, index){\n                  return(\n                    <div key={index} className=\"todo-list flex-wrapper\">\n                      <div style={{flex:7}}>\n                          <span className=\"title\" name=\"folder-name\">  -  {folders[index].name}</span>\n                      </div>\n                      <div style={{flex:2}}>\n                          <a href=\"#\" onClick={() => self.viewItems(folder)} className=\"view-items\">View items</a>\n                      </div>\n                      <div style={{flex:1}}>\n                          <a href=\"#\" onClick={() => self.removeFolder(folder)} className=\"remove\">Remove</a>\n                      </div>\n                    </div>\n                  )\n                })}\n\n              </div>\n              <br></br>\n              <form id=\"form\" onSubmit={this.handleSubmit} styles=\"text-alignt: center;\">\n                <div className=\"form-row\" styles=\" width: 95%;\">\n                    <div className=\"form-group\"  id=\"form-inputbox\">\n                        <input onChange={this.handleChange} id=\"folder-name\" className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"New Folder\" value={this.state.activeFolder.name} ></input>\n                    </div>\n                    <div className=\"form-group form-md-3\">\n                        <input id=\"add-folder\" className=\"btn btn-primary border-secondary form-control\" type=\"submit\" value=\"Add\"></input>\n                    </div>\n                </div>\n              </form>\n          </div>\n      )\n    } \n    else if (this.state.viewingItems === true && this.state.editing === false){\n      var appTitle = this.state.activeFolder.name\n      var tasks = this.state.taskList\n      return (\n        <div id=\"container\" className=\"container\">\n              <br></br>\n              \n\n              <p  styles=\"font-weight: bold;\"><a href=\"#\" className=\"a-decor_none\" onClick={() => this.restart()} type=\"link\">Folders </a> > {appTitle}</p>\n\n              <div id=\"todo-list\">\n\n                {tasks.map(function(task, index){\n                  \n                  return(\n                    <div key={index} className=\"todo-list flex-wrapper\">\n                      <div className=\"checkbox-orange\"  onClick={() => self.markUnmark(task)}>\n                        {task.completed == false ? (\n                          <span className=\"checkbox-gray\" ><i className=\"far fa-square\" styles=\"color: rgb(131, 130, 130) !important;\"></i></span>\n                        ):(\n                          <span className=\"checkbox-orange\" ><i className=\"fas fa-check-square\" ></i></span>\n                        )}\n                      </div>\n                      <div style={{flex:7}}>\n                          <span className=\"title\" name=\"folder-name\">  -  {tasks[index].title}</span>\n                      </div>\n                      <div style={{flex:2}}>\n                          <a href=\"#\" onClick={() => self.startEdit(task)} className=\"view-items\">Edit</a>\n                      </div>\n                      <div style={{flex:1}}>\n                          <a href=\"#\" onClick={() => self.removeTask(task)} className=\"remove\">Del</a>\n                      </div>\n                    </div>\n                  )\n                })}\n\n              </div>\n              <br></br>\n              <form id=\"form\" onSubmit={this.handleTaskSubmit}>\n                <div className=\"form-row \" styles=\"justify-content: space-between;\">\n                    <div className=\"form-group form-md-9\" styles=\"width: 85%;\" id=\"form-inputbox\">\n                        <input onChange={this.handleTaskChange} id=\"folder-name\" value={this.state.activeItem.title} className=\"form-control\" type=\"text\" name=\"title\" placeholder=\"New Task\"></input>\n                    </div>\n                    <div className=\"form-group form-md-3\">\n                        <input id=\"add-folder\" className=\"btn btn-primary border-secondary form-control\" type=\"submit\" value=\"Add\"></input>\n                    </div>\n                </div>\n              </form>\n          </div>\n      )\n    } \n    else if (this.state.viewingItems === true && this.state.editing === true){\n      var appTitle = this.state.activeItem.title\n      return (\n        <div id=\"container\" className=\"container\">\n            <br></br>\n            <p  styles=\"font-weight: bold;\">Editing Task: \"{appTitle}\"</p>\n            <form id=\"form\" onSubmit={this.handleTaskSubmit}>\n              <div  styles=\"justify-content: space-between;\">\n                  <div className=\"form-group form-md-9\" styles=\"width: 85%;\" id=\"form-inputbox\">\n                      <input id=\"form-inputbox-a\" onChange={this.handleTaskChange} className=\"form-control\" type=\"text\" name=\"title\" value={this.state.activeItem.title}></input>\n                  </div>\n                  <div className=\"input-group\">\n                      <div className=\"input-group-btn\">\n                          <input id=\"save\" className=\"btn btn-primary border-secondary form-control\" type=\"submit\" value=\"Save\"></input>\n                      </div>\n                      <div class=\"input-group-btn\">\n                          <input id=\"cancel\" className=\"btn btn-primary border-secondary form-control\" type=\"submit\" value=\"Cancel\"></input>\n                      </div>\n                  </div>\n              </div>\n            </form>\n        </div>\n      )\n    }\n  }\n};\n\nexport default App;","/home/cristian/Desktop/prog/proyectos/ensolvers/front_with_react/front_end_with_react/src/reportWebVitals.js",[],"/home/cristian/Desktop/prog/proyectos/ensolvers/front_react_for_spring/src/index.js",[],["42","43"],"/home/cristian/Desktop/prog/proyectos/ensolvers/front_react_for_spring/src/reportWebVitals.js",[],"/home/cristian/Desktop/prog/proyectos/ensolvers/front_react_for_spring/src/App.js",["44","45","46","47","48","49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":134,"column":11,"nodeType":"57","messageId":"58","endLine":134,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":217,"column":3,"nodeType":"61","messageId":"62","endLine":238,"endColumn":4},{"ruleId":"63","severity":1,"message":"64","line":318,"column":27,"nodeType":"65","endLine":318,"endColumn":101},{"ruleId":"63","severity":1,"message":"64","line":321,"column":27,"nodeType":"65","endLine":321,"endColumn":100},{"ruleId":"55","severity":1,"message":"66","line":343,"column":11,"nodeType":"57","messageId":"58","endLine":343,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":350,"column":47,"nodeType":"65","endLine":350,"endColumn":127},{"ruleId":"67","severity":1,"message":"68","line":359,"column":41,"nodeType":"69","messageId":"62","endLine":359,"endColumn":43},{"ruleId":"63","severity":1,"message":"64","line":369,"column":27,"nodeType":"65","endLine":369,"endColumn":99},{"ruleId":"63","severity":1,"message":"64","line":372,"column":27,"nodeType":"65","endLine":372,"endColumn":96},{"ruleId":"55","severity":1,"message":"66","line":394,"column":11,"nodeType":"57","messageId":"58","endLine":394,"endColumn":19},{"ruleId":"51","replacedBy":"70"},{"ruleId":"53","replacedBy":"71"},{"ruleId":"55","severity":1,"message":"56","line":114,"column":11,"nodeType":"57","messageId":"58","endLine":114,"endColumn":14},{"ruleId":"63","severity":1,"message":"64","line":276,"column":27,"nodeType":"65","endLine":276,"endColumn":101},{"ruleId":"63","severity":1,"message":"64","line":279,"column":27,"nodeType":"65","endLine":279,"endColumn":100},{"ruleId":"55","severity":1,"message":"66","line":301,"column":11,"nodeType":"57","messageId":"58","endLine":301,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":308,"column":47,"nodeType":"65","endLine":308,"endColumn":127},{"ruleId":"63","severity":1,"message":"64","line":327,"column":27,"nodeType":"65","endLine":327,"endColumn":99},{"ruleId":"63","severity":1,"message":"64","line":330,"column":27,"nodeType":"65","endLine":330,"endColumn":96},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-redeclare","'url' is already defined.","Identifier","redeclared","no-dupe-class-members","Duplicate name 'removeFolder'.","MethodDefinition","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'appTitle' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["72"],["73"],"no-global-assign","no-unsafe-negation"]